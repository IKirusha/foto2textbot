import telebot, os, datetime
from telebot import types
import cv2
import pytesseract

pytesseract.pytesseract.tesseract_cmd = 'C:\\Program Files\\Tesseract-OCR\\tesseract.exe'

dir_name = 'folder'
if not os.path.isdir(dir_name):
    os.mkdir(dir_name)

TOKEN = ''
bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id,
'''–ü—Ä–∏–≤–µ—Çü§ö, —è –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–æ—Ç–æ.üì∑
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ /get, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.\n
–Ø–∑—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥: —Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π''')#, parse_mode='html

@bot.message_handler(commands=['get'])
def Getphoto(message):
    global ct, slovar

    list_file = []
    slovar = {}
    ct = -1

    if not os.path.isdir(dir_name + r'/' + str(message.chat.id)):
        os.mkdir(dir_name + r'/' + str(message.chat.id))

    bot.send_message(message.chat.id,
'''–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ. –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ ‚ùóÔ∏è‚ùóÔ∏è–ë–ï–ó —Å–∂–∞—Ç–∏—è‚ùóÔ∏è‚ùóÔ∏è.

    –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
    1. –ù–∞–∂–º–∏—Ç–µ –∑–Ω–∞—á–æ–∫, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–∏–¥ –≥–∞–ª–µ—Ä–µ–∏.
    2. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è.
    3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å —Ç—Ä–µ–º—è —Ç–æ—á–∫–∞–º–∏.
    4. –í—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Å–∂–∞—Ç–∏—è".

–ü—Ä–æ—Ü–µ—Å—Å –∏–º–ø–æ—Ä—Ç–∞ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.''')

    with open(fr'{dir_name}/info.txt', "a+", encoding='utf-8') as new_text:
        new_text.write(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id, message.from_user.first_name, message.from_user.last_name, message.from_user.username} –±—ã–ª —Ç—É—Ç {str(datetime.datetime.now())[:19]}\n')

    #######################      –ù–ï –°–ñ–ê–¢–û–ï —Ñ–û–¢–û        #############################################
    @bot.message_handler(content_types=['document'])
    def get_doc(message):
        global ct, slovar, chat_id
        chat_id = message.chat.id

        markup = types.InlineKeyboardMarkup(row_width=1)
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        with open(rf'{dir_name}/{message.chat.id}/{str(message.document.file_id)}.jpg', 'wb') as new_file:
            new_file.write(downloaded_file)

        list_file.append(str(message.document.file_id)) # message.document.file_id
        if len(list_file) != 0:
            for i in list_file:
                ct += 1
                slovar.update({ct: i})
            markup.add(types.InlineKeyboardButton(f'üìå {i}', callback_data = str(ct)))
            bot.reply_to(message, f'–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç‚§µÔ∏è', reply_markup = markup)
        list_file.clear()

    #######################      –°–ñ–ê–¢–û–ï —Ñ–û–¢–û       #################################################
    @bot.message_handler(content_types=['photo'])
    def get_img(message):
        global ct, slovar, chat_id
        chat_id = message.chat.id

        markup = types.InlineKeyboardMarkup(row_width=1)
        file_info = bot.get_file(message.photo[2].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        bot.reply_to(message, '!!!–¢–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Å–∂–∞—Ç–æ–º –≤–∏–¥–µ, —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ!!!')

        with open(rf'{dir_name}/{message.chat.id}/{message.photo[2].file_id}.jpg', 'wb') as new_file:
            new_file.write(downloaded_file)

        list_file.append(message.photo[2].file_id)
        if len(list_file) != 0:
            for i in list_file:
                ct += 1
                slovar.update({ct: i})
            markup.add(types.InlineKeyboardButton(f'üìå {i}', callback_data = str(ct)))
            bot.reply_to(message, f'–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç‚§µÔ∏è', reply_markup = markup)
        list_file.clear()


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    try:
        for k in slovar.keys():
            if call.data == str(k):
                img = cv2.imread(f"{dir_name}\\{str(chat_id)}\\{slovar[k]}.jpg")
                img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
                config = r'--oem 3 --psm 6'
                bot.send_message(call.message.chat.id, pytesseract.image_to_string(img, config=config, lang="rus+eng"))#
                bot.send_message(call.message.chat.id, '–í —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.')
    except:
        bot.send_message(message.chat.id, '–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞ :(')

bot.polling(none_stop=True)
